/* source keypos definitions */

#include "../zmk-nodefree-config/keypos_def/keypos_adv360.h"

/* map 360's extra keys */
// #define X_LT    &kp EQUAL &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F11     &kp F12 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp MINUS \
//                 &kp TAB
// #define X_MT    &none &none
// #define X_RT    &kp BSLH
// #define X_LM    &kp ESC
// #define X_MM    &none &none
// #define X_RM    &kp SQT
// #define X_LB    &kp LSHFT
// #define X_RB    &kp RSHFT
// #define X_LH    &none &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT     &kp UP &kp DOWN U_WH_D U_WH_U &none \
//                 &kp LCTRL &kp LALT      &kp LGUI  &kp RCTRL
// #define X_MH    &kp HOME    &kp PG_UP
// #define X_RH    &kp END     &kp PG_DN
/* activate bluetooth */

#define CONFIG_WIRELESS 1
#define XXX &none
#define ___ &trans

/* Global settings */
// #define QUICK_TAP_MS 175

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150

/* leds and backlights */
/* source the main keymap */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* use urob's layout for Advantage 360 pro */

/ {
    behaviors {
        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.
        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods

        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 37 46 47 48 49 50 51 52 53 60 61 62 63 64 65 66 67 68 69 70 38>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 53 54 55 56 57 58 59 68 69 70 71 72 73 74 75 35 36 52 65 66 67>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_SHFT_L";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "hold-preferred";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 37 46 47 48 49 50 51 52 53 60 61 62 63 64 65 66 67 68 69 70 38>;

            // hold-trigger-key-positions = <KEYS_R THUMBS>;
            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_SHFT_R";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "hold-preferred";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 53 54 55 56 57 58 59 68 69 70 71 72 73 74 75 35 36 52 65 66 67>;

            // hold-trigger-key-positions = <KEYS_L THUMBS>;
            // hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */
        // hm: homerow_mods {
        //     compatible = "zmk,behavior-hold-tap";
        //     #binding-cells = <2>;
        //     bindings = <&kp>, <&kp>;
        //     flavor = "balanced";
        //     tapping-term-ms = <HM_TAPPING_TERM>;
        //     quick-tap-ms = <200>;
        // };
    };

    combos {
        compatible = "zmk,combos";

        Tab {
            bindings = <&kp TAB>;
            key-positions = <31 30>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <48 49>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <49 50>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <18 17>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <17 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        //  QWERTY KEY POSITIONS
        // ╭───────────────────────────╮             ╭────────────────────────────╮
        // │     1   2   3   4   5  MO1│             |MO1  6   7   8   9   0   -  |
        // │TAB  Q   W   E   R   T     │             │     Y   U   I   O   P   \  │
        // │ESC  A   S   D   F   G ╭───╯             ╰───╮ H   J   K   L   ;   '  │
        // │SHF  Z   X   C   V   B │ ╭───────╮ ╭───────╮ | N   M   ,   .   /  SHF │
        // │     `  CAP  ⮜  ⮞ ╭───╯╭╯CTL ALT│ │WIN CTL╰╮╰───╮ ⮝  ⮟   [   ]      |
        // ╰───────────────────╯╭ BK_ DEL HME│ │PGU RET SPC ╮╰────────────────────╯
        //                      | BK_ DEL END| |PGD RET SPC |
        //                      ╰────────────╯ ╰────────────╯

        Baselayer {
            bindings = <
&kp EQUAL  &kp N1            &kp N2            &kp N3         &kp N4                    &kp N5  &mo 1                                                                      &mo 1   &kp N6  &kp N7                     &kp N8         &kp N9             &kp N0                     &kp MINUS
&kp TAB    &kp Q             &kp W             &kp E          &kp R                     &kp T   &trans                                                                     &tog 3  &kp Y   &kp U                      &kp I          &kp O              &kp P                      &kp BSLH
&kp ESC    &hm_l LEFT_GUI A  &hm_l LEFT_ALT S  &hm_l LCTRL D  &hm_shift_l LEFT_SHIFT F  &kp G   &trans            &kp LCTRL  &kp LALT     &kp LGUI   &kp RCTRL             &trans  &kp H   &hm_shift_r RIGHT_SHIFT J  &hm_r RCTRL K  &hm_r RIGHT_ALT L  &hm_r RIGHT_GUI SEMICOLON  &kp APOS
&kp LSHFT  &kp Z             &kp X             &kp C          &kp V                     &kp B                                &kp HOME     &kp PG_UP                                &kp N   &kp M                      &kp COMMA      &kp DOT            &kp FSLH                   &kp RSHFT
&mo 4      &kp GRAVE         &kp CAPS          &kp LEFT       &kp RIGHT                                 &kp BSPC  &kp DEL    &lt 2 END    &kp PG_DN  &kp ENTER  &kp SPACE                  &kp UP                     &kp DOWN       &kp LBKT           &kp RBKT                   &trans
            >;
        };

        FN {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans                                                    &trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans  &trans  &trans  &kp F11  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans    &trans                          &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans  &trans  &trans                  &trans  &trans  &trans   &trans   &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans  &kp CLEAR  &kp FSLH  &kp ASTERISK  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans  &kp N7     &kp N8    &kp N9        &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &kp N4     &kp N5    &kp N6        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans    &trans                          &trans  &kp N1     &kp N2    &kp N3        &trans     &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans  &trans  &trans                  &kp N0     &kp N0    &kp DOT       &trans     &trans
            >;
        };

        gaming {
            bindings = <
&kp ESC    &none      &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                                                           &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp CAPS   &kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp G              &trans     &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp LCTRL  &kp Z   &kp X   &kp C   &kp V                                 &trans    &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &none      &none   &none   &none                   &kp SPACE  &kp LCTRL  &trans    &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans    &trans                          &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans  &trans  &trans                  &trans          &trans          &trans           &trans  &trans
            >;
        };
    };
};
